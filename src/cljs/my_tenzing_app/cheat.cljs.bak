(ns my-tenzing-app.app
  (:require [om.core :as om :include-macros true]
            [om.dom :as dom :include-macros true]
            [sablono.core :as html :refer-macros [html]]))

(def app-model
  (atom
   {:text "Hello there! change stuff!!!"
    :current-message "hello"
    :messages ["Hello"
               "This is a message"
               "Are you there?"]}))

(defn widget [data owner]
  (reify
    om/IRender
    (render [this]
      (html
       [:div
        [:h1 (:text data)]
        [:h2 "Messages"]
        [:button {:on-click (fn [_] (om/transact! data [:messages] (fn [x] (conj x "ouch!!"))))} "Click me!"]
        [:ul
         (for [message (:messages data)]
           [:li message])]
        [:input#stuff {:type "text"
                       :value (:current-message data)
                       :on-change (fn [e]
                                    (let [value (.-value (.-target e))]
                                      (om/update! data [:current-message] value)))}]
        [:button#sayit
         {:on-click (fn [_] (.log js/console (str "message is " (:current-message @data))))
          } "Say"]
        ])
      )))

(defn init []
  (om/root widget app-model
           {:target (. js/document (getElementById "container"))}))
